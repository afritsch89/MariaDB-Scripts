#!/bin/bash
source /glide/scripts/backup.conf

# Set the date
date=$(date +"%Y-%m-%d-%H%M")

# Get the current day of the week (Sunday=0, Monday=1, Tuesday=2, etc.)
day_of_week=$(date +"%u")

# check command line arguments
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -b|--backup-dir)
    backup_dir="$2"
    shift # past argument
    ;;
    -c|--compressed-backup-dir)
    compressed_backup_dir="$2"
    shift # past argument
    ;;
    -u|--user)
    user="$2"
    shift # past argument
    ;;
    -p|--password)
    password="$2"
    shift # past argument
    ;;
    -d|--databases)
    databases="$2"
    shift # past argument
    ;;
    -f|--force-full)
    force_full=true
    ;;
        -i|--force-inc)
        force_inc=true
        ;;
    -r|--retention-days)
    retention_days="$2"
    shift # past argument
    ;;
    -h|--help)
    echo "Usage: mariaChraBackup [-b|--backup-dir directory] [-c|--compressed-backup-dir directory] [-u|--user username] [-p|--password password] [-d|--databases 'db1 db2'] [-r|--retention-days number] [-f|--force-full]"
    exit 0
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done


# Loop through the databases
for db in $databases; do
  # Create the backup file
  ###FULLBACKUP###
  if [ $day_of_week -eq 0 ] || [ $force_full ]
  then
  filename="$backup_dir/$db-$date-full.backup"
  backup_start=$(date +"%Y-%m-%d %H:%M:%S")
    # Run the full backup command
    mariabackup --user=$user --password=$password --backup --target-dir=$filename
    # Compress the full backup
    /usr/bin/gzip -k "$filename"
    # Move the compressed backup to the compressed backup directory
    #cp "$filename.gz" "$compressed_backup_dir/$db-$date-full.backup.gz"
    # Log the backup information
    echo "
---------------------------------------------
$db full backup,
Start Time:$backup_start
End Time: $(date +"%Y-%m-%d %H:%M:%S")
---------------------------------------------
        " >> "$backup_dir/backup.log"
    # delete old backups older than the retention period
    find $backup_dir -maxdepth 1 -name "$db-*-full.backup" -mtime +$retention_days -exec rm -f {} \;
######FULL END######

###INC BACKUP###
  elif [ $day_of_week -ge 1 && $day_of_week -le 6  ] || [ $force_inc ]
	filename="$backup_dir/$db-$date-inc.backup"
    # Get the lastest uncompressed backup
		last_backup=$(find $backup_dir -maxdepth 1 -name "*.backup" | sort -r | head -n 1)
        
	#Mark Start Time
        backup_start=$(date +"%Y-%m-%d %H:%M:%S")
		
    # Run the incremental backup command using the lastest incremental backup as the base
        mariabackup --user=$user --password=$password --backup --incremental-basedir=$last_backup --target-dir=$filename
		
    # Compress the backup
        /usr/bin/gzip -k $filename
		
    # Move the compressed backup to the compressed backup directory
        #cp "$filename.gz" "$compressed_backup_dir/$db-$date-inc.backup.gz"
		
    # Log the backup information
        echo "
---------------------------------------------
$db incremental backup,
Base backup used: $last_backup
Start Time: $backup_start
End Time: $(date +"%Y-%m-%d %H:%M:%S")
---------------------------------------------
        " >> "$backup_dir/backup.log"
    
	# delete old backups older than the retention period
        find $backup_dir -maxdepth 1 -name "$db-*-inc.backup" -mtime +$retention_days -exec rm -f {} \;
    
	fi
#chown back to dba and snow
/usr/bin/chown -R fritscha:snow /glide/backups/
done
